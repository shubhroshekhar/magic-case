name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 0.2.1)'
        required: true
        type: string

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Set up uv
        uses: astral-sh/setup-uv@v4

      - name: Sync dependencies
        working-directory: python
        run: uv sync --no-progress

      - name: Get version
        id: version
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            VERSION="${{ github.event.inputs.version }}"
          else
            VERSION="${GITHUB_REF#refs/tags/v}"
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Validate version in pyproject.toml
        working-directory: python
        run: |
          PROJECT_VERSION=$(uv run python -c "import tomllib; print(tomllib.load(open('pyproject.toml', 'rb'))['project']['version'])")
          if [ "$PROJECT_VERSION" != "${{ steps.version.outputs.version }}" ]; then
            echo "Error: Version mismatch!"
            echo "Tag version: ${{ steps.version.outputs.version }}"
            echo "Project version: $PROJECT_VERSION"
            exit 1
          fi

      - name: Run tests
        working-directory: python
        run: uv run pytest -q

      - name: Run linting
        working-directory: python
        run: uv run ruff check .

      - name: Run formatting check
        working-directory: python
        run: uv run ruff format --check .

      - name: Build package
        working-directory: python
        run: uv run python -m build

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.version.outputs.version }}
          release_name: Release v${{ steps.version.outputs.version }}
          body: |
            ## What's Changed
            
            Release v${{ steps.version.outputs.version }}
            
            ### Features
            - Add your features here
            
            ### Bug Fixes
            - Add your bug fixes here
            
            ### Documentation
            - Add your documentation updates here
          draft: false
          prerelease: false

      - name: Upload Python Package
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: python/dist/magic_case-${{ steps.version.outputs.version }}.tar.gz
          asset_name: magic_case-${{ steps.version.outputs.version }}.tar.gz
          asset_content_type: application/gzip
